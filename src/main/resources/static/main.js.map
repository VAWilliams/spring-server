{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n* {\\r\\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\\r\\n}\\r\\n.blue {\\r\\n    padding: 40px 20px;\\r\\n    background-color: slateblue;\\r\\n}\\r\\n.white {\\r\\n    padding: 15px;\\r\\n    background-color: white;\\r\\n    border: 1px slateblue solid;\\r\\n    border-top: none;\\r\\n    border-bottom: none;\\r\\n}\\r\\nheader * {\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n}\\r\\n.box {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    margin: auto;\\r\\n}\\r\\n#center {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    margin: auto;\\r\\n    width: 300px;\\r\\n    grid-gap: 10px;\\r\\n}\\r\\n#center div {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    grid-gap: 5px;\\r\\n}\\r\\n#center div * {\\r\\n    border: none;\\r\\n    padding: 5px;\\r\\n    text-align: center;\\r\\n}\\r\\n#center .switch {\\r\\n    height: 50px;\\r\\n    margin: auto 0;\\r\\n    border-radius: 50px;\\r\\n}\\r\\n.bottom {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n}\\r\\n.bottom button {\\r\\n    width: 100px;\\r\\n    margin: auto;\\r\\n    border: initial;\\r\\n}\\r\\n#convert {\\r\\n    border-radius: 50px;\\r\\n}\\r\\n#result {\\r\\n    width: 500px;\\r\\n    margin: auto;\\r\\n    margin-top: 20px;\\r\\n    border-radius: 2px;\\r\\n}\\r\\nselect {\\r\\n    font-size: 20px;\\r\\n}\\r\\ninput {\\r\\n    height: 40px;\\r\\n}\"","module.exports = \"<header class=\\\"blue\\\">\\n  <h1>Converter</h1>\\n  \\n  <p>\\n      <em>\\n          Metric to Imperial and vice versa!\\n      </em>\\n    </p>\\n</header>\\n\\n<main>\\n\\n  <div class=\\\"container white\\\">\\n    <h3>Step 1: Provide Your Values</h3>\\n  </div>\\n\\n  <div class=\\\"box blue\\\">\\n\\n    <div id=\\\"center\\\">\\n\\n      <div class=\\\"left-wrap\\\">\\n\\n          <select id=\\\"first\\\">\\n            <option *ngFor=\\\"let l of options\\\" value=\\\"{{l.value}}\\\">{{l.name}}</option>\\n          </select>\\n\\n          <input type=\\\"number\\\" id=\\\"first-value\\\">\\n\\n        </div>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"container white\\\">\\n    <h3>Step 2: Calculate the Result</h3>\\n  </div>\\n\\n  <div class=\\\"blue bottom\\\">\\n\\n    <button id=\\\"convert\\\" class=\\\"white\\\" (click)=\\\"convert()\\\">\\n      Convert\\n    </button>\\n\\n    <div id=\\\"result\\\" class=\\\"white\\\">\\n    </div>\\n\\n  </div>\\n\\n</main>\"","import { Component } from '@angular/core';\nimport { isNumber } from 'util';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private httpClient:HttpClient) { };\n\n  // constructor for creating options\n  Data = function(value, name) {\n    this.value = value;\n    this.name = name;\n  };\n\n  options = [\n    new this.Data(\"ml_km\", \"Mile/s to Kilometer/s\"),\n    new this.Data(\"pd_kg\", \"Pound/s to Kilogram/s\"),\n    new this.Data(\"yd_mt\", \"Yard/s to Meter/s\"),\n    new this.Data(\"km_ml\", \"Kilometer/s to Mile/s\"),\n    new this.Data(\"kg_pd\", \"Kilogram/s to Pound/s\"),\n    new this.Data(\"mt_yd\", \"Meter/s to Yard/s\")\n  ];\n\n  attachment;\n\n  // makes an API request to the server(Spring Boot)\n  connectToServer(amount, type) {\n\n    this.httpClient.get(`/${amount}/${type}`)\n    .subscribe(\n      (result: any) => {\n        switch (type) {\n          case \"ml_km\":\n              this.attachment = \" kilometer/s\";\n              break;\n          case \"pd_kg\":\n              this.attachment = \" kilogram/s\";\n              break;\n          case \"yd_mt\":\n              this.attachment = \" meter/s\";\n              break;\n          case \"km_ml\":\n              this.attachment = \" mile/s\";\n              break;\n          case \"kg_pd\":\n              this.attachment = \" pound/s\";\n              break;\n          case \"mt_yd\":\n              this.attachment = \" yard/s\";\n              break;\n      }\n        // response is printed out to the HTML\n        this.result.innerHTML = result + this.attachment;\n        \n      }\n    );\n\n  }\n\n  // variables for storing document objects\n  first; input; result;\n\n  // variables for storing document object values\n  option: string; value: string; amount: number; \n\n  // validates values\n  convert() {\n\n    this.first = document.getElementById('first');\n    this.input = document.getElementById('first-value');\n    this.result = document.getElementById('result');\n\n    this.option = this.first.value;\n    this.value = this.input.value;\n    this.amount = Number(this.value);\n    \n    // checks if the amount is a valid number\n    if (!isNaN(this.amount) && isNumber(this.amount*2) && this.amount != 0) {\n      \n      // checks if amount is positive\n      if ((this.amount*(-1)) > 0) {\n        this.result.innerHTML = \"Please enter a positive number.\"\n      } else {\n        // gets the result\n        this.connectToServer(this.amount, this.option);\n      }\n\n    } else {\n      this.result.innerHTML = \"Please enter a valid number.\"\n    }\n    \n  }\n  \n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}